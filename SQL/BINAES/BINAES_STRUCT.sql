--FECHA DE PRESTAMO, SOLICITUD Y DEVOLUCION DIFERENTE DE NULL
-- AGREGAR CONECCION ENTRE COLECCIONES Y AREAS
DROP DATABASE BINAES;
GO
--CREACION DE BASE DE DATOS
CREATE DATABASE BINAES;
GO
USE BINAES;
GO
--CREACION DE ESTRUCTURA
CREATE TABLE EVENTO(
    id INT
        PRIMARY KEY NOT NULL,
    --ATRIBUTOS
    titulo VARCHAR(50) NOT NULL,
    imagen VARCHAR,
    asistentes INT,
    hora_inicio DATETIME,
    hora_final DATETIME,
    fecha_inicio DATETIME,
    fecha_final DATETIME,
);
GO

CREATE TABLE OBJETIVO(
    id INT
        PRIMARY KEY NOT NULL,
    nombre VARCHAR(50) NOT NULL,
    --FK
    id_evento INT NOT NULL
);
GO

CREATE TABLE ACTIVIDAD(
    id INT
        PRIMARY KEY NOT NULL,
    --FK
    id_area INT NOT NULL,
    id_evento INT NOT NULL,
    id_asistencia INT NOT NULL
);
GO

CREATE TABLE AREA(
    id INT
        PRIMARY KEY NOT NULL,
    --ATRIBUTOS
    nombre VARCHAR(50) NOT NULL,
    descripcion VARCHAR(100),
    horario DATETIME NOT NULL,
    --FK
    id_responsable INT NOT NULL
);
GO

CREATE TABLE RESPONSABLE(
    id INT
        PRIMARY KEY NOT NULL,
    nombre VARCHAR(50) NOT NULL
);
GO

CREATE TABLE USUARIO(
    id INT 
        PRIMARY KEY NOT NULL,
    --ATRIBUTOS
    nombre VARCHAR(50) NOT NULL,
    direccion VARCHAR(100) NULL
        DEFAULT 'Direccion no disponible',
    telefono CHAR(12) 
        NOT NULL 
        UNIQUE 
        CHECK (telefono LIKE '+503[2|6|7][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'),
    fotografia VARCHAR,
    correo VARCHAR(50),
    contrase√±a VARCHAR(50),
    --FK
    id_ocupacion INT NOT NULL,
    id_institucion INT NOT NULL,
    id_roll INT NOT NULL
);
GO

CREATE TABLE OCUPACION(
    id INT
        PRIMARY KEY NOT NULL,
    nombre VARCHAR(50)
);
GO

CREATE TABLE ROLL(
    id INT
        PRIMARY KEY NOT NULL,
    tipo VARCHAR(50)
);
GO

CREATE TABLE INSTITUCION(
    id INT
        PRIMARY KEY NOT NULL,
    nombre VARCHAR(50)
);
GO

CREATE TABLE ASISTENCIA(
    id INT 
        PRIMARY KEY NOT NULL,
    --ATRIBUTOS
    fecha_entrada DATETIME,
    fecha_salida DATETIME,
    hora_entrada DATETIME,
    hora_salida DATETIME,
    --FK
    id_usuario INT NOT NULL,
);
GO

CREATE TABLE PRESTAMO_RESERVA(
    id INT 
        PRIMARY KEY NOT NULL,
    --ATRIBUTOS
    fecha_reserva DATETIME,
    hora_reserva DATETIME,
    fecha_devolucion DATETIME,
    hora_devolucion DATETIME,
    fecha_prestamo DATETIME,
    hora_prestamo DATETIME,
    --FK
    id_usuario INT NOT NULL,
    id_ejemplar INT NOT NULL,
);
GO

CREATE TABLE EJEMPLAR(
    id INT
        PRIMARY KEY NOT NULL,
    --ATRIBUTOS
    nombre VARCHAR(50) NOT NULL,
    imagen VARCHAR,
    publicacion DATETIME NOT NULL,
    --FK
    id_coleccion INT NOT NULL,
    id_idioma INT NOT NULL,
    id_formato INT NOT NULL
);
GO

CREATE TABLE IDIOMA(
    id INT
        PRIMARY KEY NOT NULL,
    nombre VARCHAR(50) NOT NULL
);
GO

CREATE TABLE FORMATO(
    id INT
        PRIMARY KEY NOT NULL,
    nombre VARCHAR(50) NOT NULL
);
GO

CREATE TABLE AUTOR(
    id INT
        PRIMARY KEY NOT NULL,
    nombre VARCHAR(50) NOT NULL,
    --FK
    id_ejemplar INT NOT NULL
);
GO

CREATE TABLE LISTA_PALABRAS(
    id INT
        PRIMARY KEY NOT NULL,
    palabra VARCHAR(50) NOT NULL,
    --FK
    id_ejemplar INT NOT NULL
);
GO

CREATE TABLE ETIQUETA(
    id INT
        PRIMARY KEY NOT NULL,
    nombre VARCHAR(50),
    --FK
    id_ejemplar INT NOT NULL
);
GO

CREATE TABLE COLECCION(
    id INT
        PRIMARY KEY NOT NULL,
    nombre VARCHAR(50) NOT NULL,
    --FK
    id_tipo INT NOT NULL,
    id_genero INT NOT NULL
);
GO

CREATE TABLE TIPO(
    id INT
        PRIMARY KEY NOT NULL,
    nombre VARCHAR(50) NOT NULL
);
GO

CREATE TABLE GENERO(
    id INT
        PRIMARY KEY NOT NULL,
    nombre VARCHAR(50) NOT NULL
);
GO
USE master;

--CONECCTIONS
--SELECCION DE BASE DE DATOS
USE BINAES;
--CREACION DE CONEXIONES CON FK
--TABLA COLECCION
ALTER TABLE COLECCION ADD CONSTRAINT fk_genero_coleccion
	FOREIGN KEY(id_genero) REFERENCES GENERO(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO    
ALTER TABLE COLECCION ADD CONSTRAINT fk_tipo_coleccion
	FOREIGN KEY(id_tipo) REFERENCES TIPO(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
--TABLA ETIQUETA
ALTER TABLE ETIQUETA ADD CONSTRAINT fk_ejemplar_etiqueta
	FOREIGN KEY(id_ejemplar) REFERENCES EJEMPLAR(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
--TABLA LISTA DE PALABRAS
ALTER TABLE LISTA_PALABRAS ADD CONSTRAINT fk_ejemplar_lista
	FOREIGN KEY(id_ejemplar) REFERENCES EJEMPLAR(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
--TABLA AUTOR
ALTER TABLE AUTOR ADD CONSTRAINT fk_ejemplar_autor
	FOREIGN KEY(id_ejemplar) REFERENCES EJEMPLAR(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
--TABLA EJEMPLAR
ALTER TABLE EJEMPLAR ADD CONSTRAINT fk_coleccion_ejemplar
	FOREIGN KEY(id_coleccion) REFERENCES COLECCION(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
ALTER TABLE EJEMPLAR ADD CONSTRAINT fk_idioma_ejemplar
	FOREIGN KEY(id_idioma) REFERENCES IDIOMA(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
ALTER TABLE EJEMPLAR ADD CONSTRAINT fk_formato_ejemplar
	FOREIGN KEY(id_formato) REFERENCES FORMATO(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
--TABLA USUARIO
ALTER TABLE USUARIO ADD CONSTRAINT fk_institucion_usuario
	FOREIGN KEY(id_institucion) REFERENCES INSTITUCION(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
ALTER TABLE USUARIO ADD CONSTRAINT fk_ocupacion_usuario
	FOREIGN KEY(id_ocupacion) REFERENCES OCUPACION(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
ALTER TABLE USUARIO ADD CONSTRAINT fk_roll_usuario
	FOREIGN KEY(id_roll) REFERENCES ROLL(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
--TABLA AREA
ALTER TABLE AREA ADD CONSTRAINT fk_responsable_area
	FOREIGN KEY(id_responsable) REFERENCES RESPONSABLE(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
--TABLA OBJETIVO
ALTER TABLE OBJETIVO ADD CONSTRAINT fk_evento_objetivo
	FOREIGN KEY(id_evento) REFERENCES EVENTO(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
--TABLAS CRUZ
--TABLA PRESTAMO_RESERVA
ALTER TABLE PRESTAMO_RESERVA ADD CONSTRAINT fk_usuario_pxr
    FOREIGN KEY(id_usuario) REFERENCES USUARIO(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
ALTER TABLE PRESTAMO_RESERVA ADD CONSTRAINT fk_ejemplar_pxr
    FOREIGN KEY(id_ejemplar) REFERENCES EJEMPLAR(id)
	ON DELETE NO ACTION
    ON UPDATE NO ACTION;
GO
--TABLA ACTIVIDAD
ALTER TABLE ACTIVIDAD ADD CONSTRAINT fk_area_actividad
    FOREIGN KEY(id_area) REFERENCES AREA(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
ALTER TABLE ACTIVIDAD ADD CONSTRAINT fk_evento_actividad
    FOREIGN KEY(id_evento) REFERENCES EVENTO(id)
	ON DELETE NO ACTION
    ON UPDATE NO ACTION;
GO 
ALTER TABLE ACTIVIDAD ADD CONSTRAINT fk_asistencia_actividad
    FOREIGN KEY(id_asistencia) REFERENCES ASISTENCIA(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO 
--TABLA ASISTENCIA
ALTER TABLE ASISTENCIA ADD CONSTRAINT fk_usuario_asistencia
    FOREIGN KEY(id_usuario) REFERENCES USUARIO(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
USE master;